version: '3.3'

services:

  pdb:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: 'cubespoiler'
      POSTGRES_USER: 'phdk'
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_ROOT_PASSWORD: "${DB_PASSWORD}"
#    volumes:
#      - database-data:/var/lib/postgresql/data/
    networks:
      - database_network

  redis:
    image: 'bitnami/redis:latest'
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      DEBUG: 1
    networks:
      - database_network
    restart: always

  web:
    build: .
    image: app-image
    restart: always
    volumes:
      - .:/code
      - ./appdirs/:/root/.local/share/
      - ~/.local/share/mtgimg:/root/.local/share/mtgimg
      - ~/.local/share/mtgorp:/root/.local/share/mtgorp
      - static_volume:/opt/services/cubeapp/static
      - media_volume:/opt/services/cubeapp/meda
    depends_on:
      - pdb
      - redis
    networks:
      - database_network
    env_file:
      - .env
    environment:
      - DEBUG=1

  celery_worker:
    image: app-image
    command: celery -A cubeapp worker --loglevel=INFO --concurrency=1
    volumes:
      - .:/code
      - ./appdirs/:/root/.local/share/
      - ~/.local/share/mtgimg:/root/.local/share/mtgimg
      - ~/.local/share/mtgorp:/root/.local/share/mtgorp
      - static_volume:/opt/services/cubeapp/static
      - media_volume:/opt/services/cubeapp/meda
    depends_on:
      - redis
      - pdb
    networks:
      - database_network
    restart: always
    env_file:
      - .env
    environment:
      - DEBUG=1

  celery_beat:
    image: app-image
    command: celery -A cubeapp beat --loglevel=INFO
    volumes:
      - .:/code
      - ./appdirs/:/root/.local/share/
      - ~/.local/share/mtgimg:/root/.local/share/mtgimg
      - ~/.local/share/mtgorp:/root/.local/share/mtgorp
      - static_volume:/opt/services/cubeapp/static
      - media_volume:/opt/services/cubeapp/meda
    depends_on:
      - redis
      - pdb
    networks:
      - database_network
    restart: always
    env_file:
      - .env
    environment:
      - DEBUG=1

networks:
  database_network:
    driver: bridge

volumes:
  db:
  static_volume:
  media_volume:

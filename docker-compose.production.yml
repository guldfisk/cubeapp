version: '3.3'

services:

  pdb:
    environment:
      DEBUG: 0

  nginx:
    image: nginx:1.13
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "${PORT_OUT}:80"
      - "443:443"
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ~/.local/share/mtgorp:/opt/services/cubeapp/mtgorp
      - ~/.local/share/mtgimg:/opt/services/cubeapp/mtgimg
      - /home/ftper/ftp/files:/opt/services/cubeapp/files
      #      - /etc/letsencrypt/archive/prohunterdogkeeper.dk:/root/certs
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - static_volume:/opt/services/cubeapp/static
      - media_volume:/opt/services/cubeapp/media
    depends_on:
      - web
      - web_channels
    networks:
      - nginx_network
    env_file:
      - .env
    environment:
      DEBUG: 0

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  web_channels:
    entrypoint: ./channels_entrypoint.sh
    image: app-image
    volumes:
      - .:/code
      - ~/.local/share/mtgimg:/root/.local/share/mtgimg
      - ~/.local/share/mtgorp:/root/.local/share/mtgorp
      - static_volume:/opt/services/cubeapp/static
      - media_volume:/opt/services/cubeapp/media
    restart: on-failure
    depends_on:
      - pdb
      - redis
    networks:
      - database_network
      - nginx_network
    env_file:
      - .env
    environment:
      DEBUG: 0

  celery_worker:
    environment:
      DEBUG: 0

  celery_beat:
    environment:
      DEBUG: 0

  web:
    networks:
      - nginx_network
    environment:
      DEBUG: 0

  redis:
    environment:
      DEBUG: 0
#  rabbitmq:
#    environment:
#      DEBUG: 0


networks:
  nginx_network:
    driver: bridge